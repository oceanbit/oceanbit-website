---
interface Props {
  title: string;
  className?: string;
}

const { title, className = "" } = Astro.props;
---

<div class={`container ${className}`}>
  <h1 class="title">
    <span aria-hidden="true" class="icon"><slot name="icon" /></span>
    {title}
  </h1>
  <slot />
</div>

<style>
  .container {
    position: relative;
    z-index: 1;
    background: var(--colors-foreground-fg-white, #ffffff);
    padding: var(--spacing-3xl, 1.5rem);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-3xl, 1.5rem);

    border-radius: var(--radius-xl, 0.75rem);
    border: 1px solid var(--colors-border-border-tertiary, #eef2f6);
    background: var(--colors-foreground-fg-white, #fff);

    /* Shadows/shadow-md */
    box-shadow:
      0px 1px 1px -0.5px rgba(24, 34, 48, 0.04),
      0px 3px 3px -1.5px rgba(24, 34, 48, 0.04),
      0px 6px 6px -3px rgba(24, 34, 48, 0.04),
      0px 12px 12px -6px rgba(25, 65, 133, 0.06),
      0px 24px 24px -12px rgba(25, 65, 133, 0.06);
  }

  .title {
    margin: 0;
    color: var(--colors-label-label-primary-900, #121926);
    font-family: var(--family-display, "Geist variable");
    font-size: var(--size-text-xl, 1.25rem);
    font-style: normal;
    font-weight: 600;
    line-height: var(--line-height-text-xl, 1.875rem);
    letter-spacing: -1.2px;
    display: flex;
    gap: var(--spacing-sm);
    align-items: center;
  }

  .icon {
    display: inline-flex;
    width: 1rem;
    height: 1rem;
    justify-content: center;
    align-items: center;
  }

  .icon > :global(svg) {
    width: 1rem;
    height: 1rem;
  }
</style>
