---
interface Props {
  ["data-open"]?: string;
}

const { ["data-open"]: dataOpen } = Astro.props;
---

<button data-open={dataOpen}><slot /></button>

<style>
  button {
    all: unset;
    display: flex;
    padding: 8px 12px;
    justify-content: center;
    align-items: center;
    color: var(--colors-label-label-primary-900, #121926);
    border-radius: var(--radius-full, 9999px);

    /* Text sm/Medium */
    font-family: "Geist variable";
    font-size: var(--size-text-sm, 14px);
    font-style: normal;
    font-weight: 500;
    line-height: var(--line-height-text-sm, 20px); /* 142.857% */
  }

  button:focus {
    outline: 2px solid
      var(
        --component-colors-components-buttons-primary-button-primary-bg,
        #0098ff
      );
  }

  button[aria-expanded="true"] {
    border-radius: var(--radius-full, 9999px);
    border: 1px solid
      var(--component-colors-utility-brand-utility-brand-100, #d1e9ff);
    background: var(--component-colors-utility-brand-utility-brand-50, #eff8ff);
    position: relative;
    color: var(--colors-label-label-brand-primary-600, #0091f3);
  }

  button[aria-expanded="true"]::after {
    content: " ";
    position: absolute;
    width: 28px;
    height: 4px;
    bottom: -2px;
    left: 50%;
    transform: translateX(-50%);
    border-radius: var(--radius-md, 8px) var(--radius-md, 8px)
      var(--radius-none, 0px) var(--radius-none, 0px);
    background: var(
      --component-colors-utility-brand-utility-brand-600,
      #0091f3
    );
    box-shadow: 0px 0px 6px 0px rgba(21, 112, 239, 0.72);
  }
</style>
